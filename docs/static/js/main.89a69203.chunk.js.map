{"version":3,"sources":["components/Clima.js","components/Error.js","components/Formulario.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Clima","resultado","name","main","kelvin","className","parseInt","temp","toFixed","temp_max","temp_min","Error","msg","Formulario","busqueda","setBusqueda","setConsultar","useState","error","setError","ciudad","pais","handleChange","e","target","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Header","titulo","href","App","componente","consultar","setResultado","useEffect","a","url","fetch","resp","json","res","cod","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89a69203.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Clima = ({resultado}) => {\r\n\r\n    const {name, main } = resultado\r\n\r\n    if (!name) {\r\n        return null\r\n    }\r\n\r\n    const kelvin = 273.15\r\n\r\n    return ( \r\n\r\n        <div className='card-panel white col s12'>\r\n            <div className='black-text'>\r\n                <h2>El clima de {name} es:</h2>\r\n                <p className='temperatura'>\r\n                    { parseInt( main.temp - kelvin ).toFixed(0) } <span> &#x2103; </span>\r\n                </p>\r\n                <p className=''>Temperatura máxima: \r\n                    { parseInt( main.temp_max - kelvin ).toFixed(0) } <span> &#x2103; </span>\r\n                </p>\r\n                <p className=''>Temperatura mínima: \r\n                    { parseInt( main.temp_min - kelvin ).toFixed(0) } <span> &#x2103; </span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nClima.propTypes = {\r\n    resultado: PropTypes.object.isRequired\r\n}\r\n \r\nexport default Clima;","import PropTypes from 'prop-types'\r\n\r\nconst Error = ({msg}) => {\r\n    return ( \r\n\r\n         <p className='red darken-4 error'>{msg}</p>\r\n\r\n    );\r\n}\r\n\r\nError.propTypes = {\r\n    msg: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Error;","import PropTypes from 'prop-types'\r\nimport { useState } from \"react\";\r\nimport Error from \"./Error\";\r\n\r\nconst Formulario = ({busqueda, setBusqueda, setConsultar}) => {\r\n    \r\n    const [error, setError] = useState(false)\r\n\r\n    const { ciudad, pais } = busqueda\r\n\r\n    const handleChange = (e) => {\r\n        setBusqueda({\r\n            ...busqueda,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        //validar\r\n        if (ciudad.trim() === '' || pais.trim() === '') {\r\n            setError(true)\r\n            return\r\n        }\r\n        setError(false)\r\n\r\n        setConsultar(true)\r\n\r\n        //pasar al componente principal\r\n\r\n    }\r\n    \r\n    return ( \r\n\r\n        <form\r\n            onSubmit={handleSubmit}\r\n        >\r\n            {error ? <Error msg='Todos los campos son requeridos' /> : null}\r\n            <div className='input-field col s12'>\r\n                <input \r\n                    type='text'\r\n                    name='ciudad'\r\n                    id='ciudad'\r\n                    value={ciudad}\r\n                    onChange={handleChange}\r\n                />\r\n                <label htmlFor='ciudad'>\r\n                    Ciudad:\r\n                </label>\r\n            </div>\r\n\r\n            <div className='input-field col s12'>\r\n                <select\r\n                    name='pais'\r\n                    id='pais'\r\n                    value={pais}\r\n                    onChange={handleChange}\r\n                >\r\n                    <option value=''>Seleccione un pais</option>\r\n                    <option value=\"AR\">Argentina</option>\r\n                    <option value=\"CO\">Colombia</option>\r\n                    <option value=\"CR\">Costa Rica</option>\r\n                    <option value=\"US\">Estados Unidos</option>\r\n                    <option value=\"ES\">España</option>\r\n                    <option value=\"MX\">México</option>\r\n                    <option value=\"PE\">Perú</option>\r\n                    <option value=\"UY\">Uruguay</option>\r\n                </select>\r\n                <label htmlFor='pais'>\r\n                    Pais:\r\n                </label>\r\n            </div>\r\n            <div className=\"input-field col s12\">\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"waves-effect waves-light btn-large btn-block yellow accent-4 col s12\"\r\n                >\r\n                    Buscar Clima\r\n                </button>\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    busqueda: PropTypes.object.isRequired,\r\n    setBusqueda: PropTypes.func.isRequired,\r\n    setConsultar: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import PropTypes from 'prop-types'\r\nimport React from 'react';\r\n\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n       \r\n        <nav>\r\n            <div className='nav-wrapper light-blue darken-2'>\r\n                <a href='#!' className='brand-logo'>{titulo}</a>\r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header;","import { useEffect, useState } from \"react\";\nimport Clima from \"./components/Clima\";\nimport Formulario from \"./components/Formulario\";\nimport Header from \"./components/Header\";\nimport Error from \"./components/Error\";\n\nfunction App() {\n\n  const [busqueda, setBusqueda] = useState({\n    ciudad:'',\n    pais:''\n  })\n\n  const [consultar, setConsultar] = useState(false)\n  const [resultado, setResultado] = useState({})\n  const [error, setError] = useState(false)\n\n  const { ciudad, pais } = busqueda\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n\n      if (consultar) {\n                \n        const appId = '70a1b063f237d00672b1751c2a5f1b08'\n        \n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`\n        \n        const resp = await fetch(url)\n        \n        const res = await resp.json()\n        \n        setResultado(res)\n        setConsultar(false)\n\n        if (resultado.cod === '404') {\n          setError(true)\n        } else {\n          setError(false)\n        }\n        \n      }\n\n    }\n    consultarAPI()\n  }, [consultar, ciudad, pais])\n\n  let componente\n  if (error) {\n    componente = <Error \n      msg='No hay resultados'\n    />\n  } else {\n    componente = <Clima \n      resultado={resultado}\n    />\n  }\n  \n\n  return (\n    <>\n      <Header \n        titulo='Clima React App'\n      /> \n\n      <div className='contenedor-form'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col m6 s12'>\n              <Formulario \n                busqueda={busqueda}\n                setBusqueda={setBusqueda}\n                setConsultar={setConsultar}\n              />\n            </div>\n            <div className='col m6 s12'>\n              {componente}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}